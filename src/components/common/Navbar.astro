---
import { Icon } from 'astro-icon/components';

const links = [
  { name: "Inicio", href: "/" },
  { name: "Proyectos", href: "/projects" },
  { name: "Línea de tiempo", href: "/timeline" },
  { name: "Contacto", href: "/contact" },
  { name: "CV", href: "/resume" },
];
---

<nav class="navbar" aria-label="Principal" id="navbar">
  <div class="navbar-container">
    <a class="logo" href="/">EDHUCO</a>

    <!-- Botón hamburguesa (desktop: oculto) -->
    <button
      class="menu-toggle"
      aria-label="Abrir menú"
      aria-expanded="false"
      aria-controls="mobile-menu"
      id="menuButton"
    >
      <svg class="icon" width="26" height="26" viewBox="0 0 24 24" fill="none" aria-hidden="true">
        <path d="M4 7h16M4 12h16M4 17h16" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
      </svg>
    </button>

    <!-- Links desktop -->
    <ul class="nav-links desktop">
      {links.map(link => (
        <li><a href={link.href}>{link.name}</a></li>
      ))}
    <button class="theme-toggle desktop" aria-label="Cambiar tema" id="themeToggleDesktop">
  <Icon class="icon-sun"  name="heroicons-outline:sun"  width={20} height={20} />
  <Icon class="icon-moon" name="heroicons-outline:moon" width={20} height={20} />
</button>
    </ul>


  </div>

  <!-- Panel móvil (overlay) -->
  <div id="mobile-menu" class="mobile-panel" aria-hidden="true">
    <div class="mobile-card">
      <div class="mobile-header">
        <span class="brand"> EDHUCO</span>
        <!-- Botón CERRAR dentro del panel -->
        <button class="close-btn" aria-label="Cerrar menú" id="closeButton">
          <svg width="26" height="26" viewBox="0 0 24 24" fill="none" aria-hidden="true">
            <path d="M6 6l12 12M18 6l-12 12" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
          </svg>
        </button>
        <button class="theme-toggle" aria-label="Cambiar tema" id="themeToggleMobile">
  <Icon class="icon-sun"  name="heroicons-outline:sun"  width={20} height={20} />
  <Icon class="icon-moon" name="heroicons-outline:moon" width={20} height={20} />
</button>


      </div>

      <ul class="nav-links mobile">
        {links.map(link => (
          <li><a href={link.href}>{link.name}</a></li>
        ))}
      </ul>
    </div>
  </div>
</nav>

<style>
  :root{
    --c-text: #e2e8f0;
    --c-accent: #ccbf9a;
    --glass: rgba(10,15,25,.35);
    --panel: rgba(17,25,40,.28);
    --bd: rgba(148,163,184,.28);
  }

    html, body {
    overflow-x: hidden;
    max-height: 100vh;
  }

  /* Tema CLARO */
html:not(.dark){
  --c-text:  #1a1a1a;         /* texto oscuro */
  --c-accent:#6b4f1d;         /* hover/acento cálido (ajústalo a tu paleta) */
  --glass:   rgba(10,15,25,.10);   /* overlay más suave */
  --panel:   rgba(255,255,255,.96);/* tarjeta clara y legible */
  --bd:      rgba(0,0,0,.08);      /* borde sutil para light */
}

/* Tema OSCURO (por si no lo tienes ya) */
html.dark{
  --c-text:  #e2e8f0;
  --c-accent:#ccbf9a;
  --glass:   rgba(10,15,25,.35);
  --panel:   rgba(17,25,40,.28);
  --bd:      rgba(148,163,184,.28);
}
  

  /* NAV contenedor */
  .navbar{
    position: sticky; top: 0; z-index: 1000;
    background: transparent; border-bottom: none;
  }
  .navbar-container{
    max-width: 1200px; margin: 0 auto;
    display: flex; align-items: center; justify-content: space-between;
    padding: .9rem 1rem;
  }
  .logo{ color: var(--c-accent); font-weight: 700; text-decoration: none; letter-spacing:.2px; }

  /* Links base */
  .nav-links{ list-style: none; margin: 0; padding: 0; }
  .nav-links li{ margin: 0; }
  .nav-links a{
    display: inline-block;
    color: var(--c-text); text-decoration: none; font-size: .98rem;
    padding: .5rem .25rem; transition: color .2s ease, background .2s ease;
  }
  .nav-links a:hover{ color: var(--c-accent); }

  /* Desktop vs móvil */
  .desktop{ display: none; gap: 1.25rem; }
  .menu-toggle{
    display: inline-flex; align-items:center; justify-content:center;
    color: var(--c-text);
    background: rgba(148,163,184,.12);
    border: 1px solid var(--bd); border-radius: 10px;
    padding: .45rem .55rem; cursor: pointer;
  }

  /* PANEL MÓVIL: cerrado por defecto */
  .mobile-panel{
    position: fixed; inset: 0; z-index: 1200;
    background: var(--glass);
    display: grid; place-items: start center;
    padding: 1rem; background: var(--glass);
    backdrop-filter: blur(8px) saturate(120%);
    -webkit-backdrop-filter: blur(8px) saturate(120%);
    /* estado cerrado */
    opacity: 0; visibility: hidden; pointer-events: none;
    transition: opacity .2s ease, visibility 0s linear .2s;
    overflow: hidden; /* evita segundo scroll detrás */
  }
  /* Contenedor de la tarjeta */
  .mobile-card{
    background: var(--panel);
    border: 1px solid var(--bd);
    width: min(680px, 92vw);
    margin-top: 4.5rem;
    background: var(--panel);
    border: 1px solid var(--bd);
    border-radius: 16px;
    box-shadow: 0 10px 40px rgba(0,0,0,.25);
    overflow: hidden;
  }
  .mobile-header{
    display:flex; align-items:center; justify-content:space-between;
    padding: .75rem 1rem; border-bottom: 1px solid var(--bd);
  }
  .brand{ color: var(--c-accent); font-weight: 700; }
  .close-btn{
    display: inline-flex; align-items:center; justify-content:center;
    color: var(--c-text); border-color: var(--bd);
    background: transparent; border: 1px solid var(--bd);
    border-radius: 10px; padding: .35rem .45rem; cursor: pointer;
  }
  .nav-links.mobile{
    display: grid; gap: .25rem; padding: .6rem;
    max-height: calc(100vh - 8rem); overflow-y: auto; /* scroll SOLO del panel si hace falta */
    -webkit-overflow-scrolling: touch;
  }
  .nav-links.mobile a{ display:block; padding: .85rem .9rem; border-radius: 10px; }
  .nav-links.mobile a:hover{ background: rgba(56,189,248,.08); color: var(--c-accent); }

  /* Estado ABIERTO */
  .navbar.is-open .mobile-panel{
    opacity: 1; visibility: visible; pointer-events: auto;
    transition: opacity .2s ease;
  }

  @media (min-width: 768px){
    .desktop{ display:flex; }
    .menu-toggle{ display:none; }
    .mobile-panel{ display:none !important; }
  }

  @media (prefers-reduced-motion: reduce){
    *{ transition-duration: .001ms !important; }
  }


.theme-toggle:hover{ transform: scale(1.05); }
.theme-toggle{
  display:inline-flex; align-items:center; justify-content:center;
  background: rgba(148,163,184,.12);
  border: 1px solid var(--bd);
  border-radius: 10px;
  padding: .35rem .5rem;
  cursor: pointer;
  color: var(--c-text);
  margin-left: .5rem;
  transition: transform .2s ease, background .2s ease, border-color .2s ease;
}
.theme-toggle:hover{ transform: scale(1.05); }

/* Por defecto mostramos el icono acorde al tema */
.icon-sun { display: none; }
html.dark .icon-moon { display: inline-block; }
html.dark .icon-sun  { display: none; }

/* En tema claro: sol visible, luna oculta */
html:not(.dark) .icon-sun  { display: inline-block; }
html:not(.dark) .icon-moon { display: none; }


</style>

<script type="module">
  // ---------- THEME TOGGLE ----------
  function setTheme(mode) {
    try { localStorage.setItem('theme', mode); } catch {}
    const isDark = mode === 'dark';
    document.documentElement.classList.toggle('dark', isDark);
    document.documentElement.style.colorScheme = isDark ? 'dark' : 'light';
  }
  function getInitialTheme() {
    let stored = null;
    try { stored = localStorage.getItem('theme'); } catch {}
    if (stored === 'dark' || stored === 'light') return stored;
    const prefersDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;
    return prefersDark ? 'dark' : 'light';
  }
  function toggleTheme() {
    const isDark = document.documentElement.classList.contains('dark');
    setTheme(isDark ? 'light' : 'dark');
  }

  // ---------- NAVBAR (menu móvil) ----------
  let navAbort; // para limpiar listeners entre rutas

  function setupNavbar() {
    // Limpia cualquier binding anterior
    if (navAbort) navAbort.abort();
    navAbort = new AbortController();
    const { signal } = navAbort;

    const nav   = document.getElementById('navbar');
    const openB = document.getElementById('menuButton');
    const closeB= document.getElementById('closeButton');
    const panel = document.getElementById('mobile-menu');

    const lockScroll = () => {
      document.documentElement.style.overflow = 'hidden';
      document.body.style.overflow = 'hidden';
      document.body.style.touchAction = 'none';
    };
    const unlockScroll = () => {
      document.documentElement.style.overflow = '';
      document.body.style.overflow = '';
      document.body.style.touchAction = '';
    };

    const openMenu = () => {
      nav?.classList.add('is-open');
      openB?.setAttribute('aria-expanded','true');
      panel?.setAttribute('aria-hidden','false');
      lockScroll();
    };
    const closeMenu = () => {
      nav?.classList.remove('is-open');
      openB?.setAttribute('aria-expanded','false');
      panel?.setAttribute('aria-hidden','true');
      unlockScroll();
    };

    // Eventos
    openB?.addEventListener('click', () => (
      nav?.classList.contains('is-open') ? closeMenu() : openMenu()
    ), { signal });

    closeB?.addEventListener('click', closeMenu, { signal });

    panel?.addEventListener('click', (e) => {
      const t = e.target;
      if (t && t.tagName === 'A') closeMenu();
    }, { signal });

    window.addEventListener('keydown', (e) => {
      if (e.key === 'Escape') closeMenu();
    }, { signal });

    // Cierra el panel antes de hacer swap de ruta para no dejar el scroll bloqueado
    document.addEventListener('astro:before-swap', closeMenu, { signal });

    // THEME: re‑engancha los botones de toggle por si el DOM cambió
    const btnDesktop = document.getElementById('themeToggleDesktop');
    const btnMobile  = document.getElementById('themeToggleMobile');
    btnDesktop?.addEventListener('click', toggleTheme, { signal });
    btnMobile?.addEventListener('click', toggleTheme, { signal });
  }

  // Primera carga
  document.addEventListener('astro:page-load', () => {
    // Asegura tema
    setTheme(getInitialTheme());
    setupNavbar();
  });

  // Después de cada navegación SPA
  document.addEventListener('astro:after-swap', () => {
    setupNavbar();
  });
</script>

